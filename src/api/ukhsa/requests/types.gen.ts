// This file is auto-generated by @hey-api/openapi-ts

export type MetricTimeSeriesList = {
  theme: string;
  sub_theme: string;
  topic: string;
  geography_type: string;
  geography: string;
  geography_code: string | null;
  metric: string;
  metric_group?: string | null;
  stratum: string;
  sex: string | null;
  age: string | null;
  year: number;
  month: number | null;
  epiweek: number;
  date: string;
  metric_value: number;
  /**
   *
   * Whether the record falls within the current reporting delay period.
   * If true, then the value is subject to change in a subsequent retrospective update.
   *
   */
  in_reporting_delay_period?: boolean;
};

export type GeographyDetail = {
  readonly metrics: string;
};

export type GeographyList = {
  name: string;
  readonly link: string;
};

export type GeographyTypeDetail = {
  readonly geographies: string;
};

export type GeographyTypeList = {
  name: string;
  readonly link: string;
};

export type MetricList = {
  name: string;
  readonly link: string;
};

export type MetricTimeSeries = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<MetricTimeSeriesList>;
};

export type SubThemeDetail = {
  readonly topics: string;
};

export type SubThemeList = {
  name: string;
  readonly link: string;
};

export type ThemeDetail = {
  readonly sub_themes: string;
};

export type ThemeList = {
  name: string;
  readonly link: string;
};

export type TopicDetail = {
  readonly geography_types: string;
};

export type TopicList = {
  name: string;
  readonly link: string;
};

export type GetHealthResponse = unknown;

export type GetThemeListResponse = ThemeList;

export type GetThemeDetailData = {
  theme: string;
};

export type GetThemeDetailResponse = ThemeDetail;

export type GetSubThemeListData = {
  theme: string;
};

export type GetSubThemeListResponse = SubThemeList;

export type GetSubThemeDetailData = {
  subTheme: string;
  theme: string;
};

export type GetSubThemeDetailResponse = SubThemeDetail;

export type GetTopicListData = {
  subTheme: string;
  theme: string;
};

export type GetTopicListResponse = TopicList;

export type GetTopicDetailData = {
  subTheme: string;
  theme: string;
  topic: string;
};

export type GetTopicDetailResponse = TopicDetail;

export type GetGeographyTypeListData = {
  subTheme: string;
  theme: string;
  topic: string;
};

export type GetGeographyTypeListResponse = GeographyTypeList;

export type GetGeographyTypeDetailData = {
  geographyType: string;
  subTheme: string;
  theme: string;
  topic: string;
};

export type GetGeographyTypeDetailResponse = GeographyTypeDetail;

export type GetGeographyListData = {
  geographyType: string;
  subTheme: string;
  theme: string;
  topic: string;
};

export type GetGeographyListResponse = GeographyList;

export type GetGeographyDetailData = {
  geography: string;
  geographyType: string;
  subTheme: string;
  theme: string;
  topic: string;
};

export type GetGeographyDetailResponse = GeographyDetail;

export type GetMetricListData = {
  geography: string;
  geographyType: string;
  subTheme: string;
  theme: string;
  topic: string;
};

export type GetMetricListResponse = MetricList;

export type GetMetricDetailData = {
  age?: string;
  date?: string;
  epiweek?: number;
  geography: string;
  geographyType: string;
  inReportingDelayPeriod?: boolean;
  metric: string;
  /**
   * A page number within the paginated result set.
   */
  page?: number;
  /**
   * Number of results to return per page.
   */
  pageSize?: number;
  sex?: string;
  stratum?: string;
  subTheme: string;
  theme: string;
  topic: string;
  year?: number;
};

export type GetMetricDetailResponse = MetricTimeSeries;

export type $OpenApiTs = {
  '/health/': {
    get: {
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  '/themes/': {
    get: {
      res: {
        200: ThemeList;
      };
    };
  };
  '/themes/{theme}': {
    get: {
      req: GetThemeDetailData;
      res: {
        200: ThemeDetail;
      };
    };
  };
  '/themes/{theme}/sub_themes/': {
    get: {
      req: GetSubThemeListData;
      res: {
        200: SubThemeList;
      };
    };
  };
  '/themes/{theme}/sub_themes/{sub_theme}': {
    get: {
      req: GetSubThemeDetailData;
      res: {
        200: SubThemeDetail;
      };
    };
  };
  '/themes/{theme}/sub_themes/{sub_theme}/topics': {
    get: {
      req: GetTopicListData;
      res: {
        200: TopicList;
      };
    };
  };
  '/themes/{theme}/sub_themes/{sub_theme}/topics/{topic}': {
    get: {
      req: GetTopicDetailData;
      res: {
        200: TopicDetail;
      };
    };
  };
  '/themes/{theme}/sub_themes/{sub_theme}/topics/{topic}/geography_types': {
    get: {
      req: GetGeographyTypeListData;
      res: {
        200: GeographyTypeList;
      };
    };
  };
  '/themes/{theme}/sub_themes/{sub_theme}/topics/{topic}/geography_types/{geography_type}': {
    get: {
      req: GetGeographyTypeDetailData;
      res: {
        200: GeographyTypeDetail;
      };
    };
  };
  '/themes/{theme}/sub_themes/{sub_theme}/topics/{topic}/geography_types/{geography_type}/geographies': {
    get: {
      req: GetGeographyListData;
      res: {
        200: GeographyList;
      };
    };
  };
  '/themes/{theme}/sub_themes/{sub_theme}/topics/{topic}/geography_types/{geography_type}/geographies/{geography}': {
    get: {
      req: GetGeographyDetailData;
      res: {
        200: GeographyDetail;
      };
    };
  };
  '/themes/{theme}/sub_themes/{sub_theme}/topics/{topic}/geography_types/{geography_type}/geographies/{geography}/metrics': {
    get: {
      req: GetMetricListData;
      res: {
        200: MetricList;
      };
    };
  };
  '/themes/{theme}/sub_themes/{sub_theme}/topics/{topic}/geography_types/{geography_type}/geographies/{geography}/metrics/{metric}': {
    get: {
      req: GetMetricDetailData;
      res: {
        200: MetricTimeSeries;
      };
    };
  };
};
